{"version":3,"file":"/js/approval.js","mappings":"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","sources":["webpack:///./resources/js/_comments.js","webpack:///./resources/js/approval.js"],"sourcesContent":["export const commentsHelper = function () {\n    'use strict';\n\n    let data = {\n        'commentTemplate': null\n    };\n\n    let css = {\n        'mainContainer': '#assignmentContainer',\n        'viewTypes': {\n            'grid': 'ajr-grid',\n            'list': 'ajr-list'\n        },\n        'modals': {\n            'comment': '#commentModal'\n        },\n        'comments': {\n            'form': '#newComment',\n            'formError': '#commentError'\n        },\n        'household': {\n            'container': '.household',\n            'comments': '.allComments',\n            'status': '.status',\n            'error': '.statusError'\n        }\n    };\n\n    let functions = {\n    \t'init' : function(createUrl) {\n    \t\t$.ajaxSetup({\n\t\t\t    headers: {\n\t\t\t        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n\t\t\t    }\n\t\t\t});\n    \t},\n    \t'setDataAttr' : function(attr, val) {\n    \t\tdata[attr] = val;\n    \t},\n    \t'getDataAttr' : function(attr) {\n    \t\treturn data[attr];\n    \t},\n    \t'getAllData' : function() {\n    \t\treturn data;\n    \t},\n        'createComment' : function(params) {\n    \t\t$.ajax({\n                url: params.url,\n                type: 'post',\n                data: params.data,\n                success: function(response) {\n                    params.successCallback(response);\n                }\n            });\n    \t},\n    \t'buildComments' : function(container, comments, emptyMessage) {\n    \t\tif(typeof emptyMessage === 'undefined') {\n                emptyMessage = 'No comments yet.';\n            }\n\n            container.html('');\n\n            if(comments.length === 0) {\n                container.html('<p>' + emptyMessage + '</p>');\n            }else {\n    \t\t    $.each(comments, function(index, comment) {\n    \t\t\t\tlet authorInfo = comment.author.name + ' - ' + _moment(comment.updated_at).format('YYYY-MM-DD LT');\n    \t\t\t\tlet newComment = data.commentTemplate(comment.id, comment.body, authorInfo);\n    \t\t\t\tcontainer.prepend(newComment);\n    \t\t\t});\n            }\n    \t},\n    \t'setCommentError' : function(container, error) {\n    \t\tcontainer.html(error);\n    \t},\n    \t'resetCommentForm' : function(form) {\n    \t\tform.reset();\n    \t},\n        'showCommentsAjaxLoader' : function(container) {\n            container.find('.ajax-loader').removeClass('d-none');\n        },\n        'hideCommentsAjaxLoader' : function(container) {\n            container.find('.ajax-loader').addClass('d-none');\n        }\n    };\n\n    return {\n        data : functions.getAllData,\n        functions: functions\n    }\n}();\n","import {commentsHelper} from './_comments.js';\n\nwindow.approvalHelper = function () {\n    'use strict';\n\n    var data = {\n        'currentMinisterId': null\n    };\n\n    var css = {\n        'mainContainer': '#assignmentContainer',\n        'viewTypes': {\n            'grid': 'ajr-grid',\n            'list': 'ajr-list'\n        },\n        'modals': {\n            'comment': '#commentModal'\n        },\n        'comments': {\n            'form': '#newComment',\n            'formError': '#commentError'\n        },\n        'household': {\n            'container': '.household',\n            'comments': '.allComments',\n            'status': '.status',\n            'error': '.statusError'\n        }\n    };\n\n    const commentTemplate = function commentTemplate(id, body, author ) {\n        return `\n            <div class='ministeringComment' data-commentid=\"${id}\">\n                <author>${author}</author>\n                <p class=\"commentBody\">${body}</p>\n            </div>\n        `;\n    };\n\n    var functions = {\n    \t'init' : function(households) {\n    \t\t$.ajaxSetup({\n\t\t\t    headers: {\n\t\t\t        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n\t\t\t    }\n\t\t\t});\n\n            $('.household').each(function() {\n                functions.handleBtnGroup($(this));\n            });\n\n            commentsHelper.functions.init();\n            commentsHelper.functions.setDataAttr('commentTemplate', commentTemplate);\n    \t},\n    \t'setDataAttr' : function(attr, val) {\n    \t\tdata[attr] = val;\n    \t},\n    \t'getDataAttr' : function(attr) {\n    \t\treturn data[attr];\n    \t},\n    \t'getAllData' : function() {\n    \t\treturn data;\n    \t},\n        'getActiveContainerById' : function(ministerId) {\n            return $('[data-ministerid=\"' + ministerId + '\"] ' + css.household.comments);\n        },\n    \t'createComment' : function() {\n    \t\tconst form = $(css.comments.form);\n            const ministerId = form.find('#ministerId').val();\n            functions.setDataAttr('currentMinisterId', ministerId);\n            let params = {\n                'url' : '/api/minister-to/' + ministerId + '/comments/create',\n                'data' : {\n                    form: JSON.stringify(form.serializeArray().reduce(function(m,o){  m[o.name] = o.value; return m;}, {}))\n                },\n                'successCallback' : functions.commentCreateSuccess\n            };\n\n            commentsHelper.functions.createComment(params);\n    \t},\n        'commentCreateSuccess' : function(response) {\n            if(response.saved) {\n                commentsHelper.functions.resetCommentForm(\n                    $(css.comments.form)[0]\n                );\n                commentsHelper.functions.buildComments(\n                    functions.getActiveContainerById(functions.getDataAttr('currentMinisterId')),\n                    response.comments,\n                    'No feedback provided.'\n                );\n                $(css.modals.comment).modal('hide');\n            } else {\n                commentsHelper.functions.setCommentError(\n                    $(css.comments.formError),\n                    'Could not save your comment. Refresh the page and try again.'\n                );\n            }\n        },\n    \t'updateStatus' : function(btn, status) {\n            let container = btn.closest(css.household.container);\n            let ministerId = container.data('ministerid');\n            let householdId = container.data('householdid');\n\n            $.ajax({\n                url: '/api/minister-to/household/' + householdId + '/' + status,\n                type: 'post',\n                data: {},\n                success: function(response) {\n                    if(response.saved) {\n                        $(css.household.status, container).html(response.status),\n                        console.log($(css.household.container, container));\n                        $(container).removeClass().addClass('household ' + response.status);\n                        functions.handleBtnGroup(container);\n                    } else {\n                        functions.setStatusError('Could not update the status. Refresh the page and try again.');\n                    }\n                }\n            });\n        },\n        'setStatusError' : function(error) {\n            $(css.household.error).html(error);\n        },\n        'handleBtnGroup' : function(container) {\n            $('.btn-group', container)\n                .find('button')\n                .removeClass('fake-last')\n                .removeClass('fake-first');\n\n            $('.btn-group', container)\n                .find('button')\n                .not(':hidden')\n                .last()\n                .addClass('fake-last');\n\n            $('.btn-group', container)\n                .find('button')\n                .not(':hidden')\n                .first()\n                .addClass('fake-first');\n        },\n        'changeViewType' : function(viewType) {\n            switch(viewType) {\n                case 'grid':\n                    $(css.mainContainer).removeClass(css.viewTypes.list).addClass(css.viewTypes.grid);\n                    break;\n                case 'list':\n                default:\n                    $(css.mainContainer).addClass(css.viewTypes.list).removeClass(css.viewTypes.grid);\n                    break;\n            }\n        }\n    };\n\n\t$(document).on('click touch', '#submitComment', function(e) {\n\t\te.preventDefault();\n\t\tfunctions.createComment();\n    });   \n\n    $(document).on('click touch', '.acceptAssignment', function(e) {\n        functions.updateStatus($(this), 'accept');\n    });\n\n    $(document).on('click touch', '.rejectAssignment', function(e) {\n        functions.updateStatus($(this), 'reject');\n    });\n\n    $(document).on('click touch', '.resetStatus', function(e) {\n        functions.updateStatus($(this), 'propose');\n    });\n\n    $(document).on('click touch', '#viewChoice li', function() {\n        functions.changeViewType($(this).data('viewtype'));\n    })\n\n    return {\n        data : functions.getAllData,\n        functions: functions\n    }\n}();\n"],"names":["data","functions","commentsHelper","createUrl","$","ajaxSetup","headers","attr","val","params","ajax","url","type","success","response","successCallback","container","comments","emptyMessage","html","length","each","index","comment","authorInfo","author","name","_moment","updated_at","format","newComment","commentTemplate","id","body","prepend","error","form","reset","find","removeClass","addClass","getAllData","window","approvalHelper","css","households","handleBtnGroup","this","init","setDataAttr","ministerId","JSON","stringify","serializeArray","reduce","m","o","value","commentCreateSuccess","createComment","saved","resetCommentForm","buildComments","getActiveContainerById","getDataAttr","modal","setCommentError","formError","btn","status","closest","householdId","console","log","setStatusError","not","last","first","viewType","list","grid","document","on","e","preventDefault","updateStatus","changeViewType"],"sourceRoot":""}