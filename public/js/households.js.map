{"version":3,"file":"/js/households.js","mappings":"mBAAO,IAGCA,EA0BAC,EA7BKC,GAGLF,EAAO,CACP,gBAAmB,KACnB,oBAAuB,MA0FpB,CACHA,MAnEAC,EAAY,CACf,KAAS,SAASE,GACjBC,EAAEC,UAAU,CACXC,QAAS,CACL,eAAgBF,EAAE,2BAA2BG,KAAK,eAIxD,YAAgB,SAASA,EAAMC,GAC9BR,EAAKO,GAAQC,GAEd,YAAgB,SAASD,GACxB,OAAOP,EAAKO,IAEb,WAAe,WACd,OAAOP,GAEL,cAAkB,SAASS,GAC7BL,EAAEM,KAAK,CACGC,IAAKF,EAAOE,IACZC,KAAM,OACNZ,KAAMS,EAAOT,KACba,QAAS,SAASC,GACdL,EAAOM,gBAAgBD,OAItC,cAAkB,SAASE,EAAUC,EAAWC,EAAUC,QAC9B,IAAjBA,IACAA,EAAe,oBAGnBF,EAAUG,KAAK,IAEQ,IAApBF,EAASG,OACRJ,EAAUG,KAAK,MAAQD,EAAe,QAE5Cf,EAAEkB,KAAKJ,GAAU,SAASK,EAAOC,GACvBC,QAAQC,IAAIF,GACZC,QAAQC,IAAIV,GACZ,IAAIW,EAASH,EAAQG,YAEA,IAAXA,IACNA,EAASH,EAAQI,YAIjC,IAAIC,EAAab,EAASQ,EAAQM,GAAIN,EAAQO,KAAMJ,EAAOK,KAAMC,QAAQT,EAAQU,YAAYC,OAAO,kBACpGlB,EAAUmB,QAAQP,OAIrB,gBAAoB,SAASZ,EAAWoB,GACvCpB,EAAUG,KAAKiB,IAEhB,iBAAqB,SAASC,GAC7BA,EAAKC,SAEH,uBAA2B,SAAStB,GAChCA,EAAUuB,KAAK,gBAAgBC,YAAY,WAE/C,uBAA2B,SAASxB,GAChCA,EAAUuB,KAAK,gBAAgBE,SAAS,aAK3BC,WACjB1C,UAAWA,I,urBC/FnB2C,OAAOC,iBAAmB,WAGtB,IAAI7C,EAAO,CACP,WAAc,GACd,mBAAsB,KACtB,gBAAmB,KACnB,GAAM,KACN,iBAAoB,GAGpB8C,EAAMA,EAAM,CACZ,cAAiB,uBACjB,OAAU,CACN,QAAW,gBACX,UAAa,CACT,UAAa,kBACb,SAAY,iBAGpB,SAAY,CACR,KAAQ,cACR,UAAa,gBACb,aAAgB,SAChB,QAAW,gBAEf,UAAa,CACT,UAAa,kCACb,SAAY,eACZ,KAAQ,iBACR,MAAS,SACT,cAAiB,eAErB,OAAU,CACN,MAAS,sBAIXC,EAAkB,SAAyBjB,EAAIC,EAAMiB,EAAYC,GACnE,6EACoDnB,EADpD,uCAEkBkB,EAFlB,cAEkCC,EAFlC,6DAGiClB,EAHjC,uCAQEmB,EAAsB,SAA6BpB,EAAIC,EAAMiB,EAAYC,GAC3E,kFACyDnB,EADzD,6GAIkBkB,EAJlB,4GAOkBC,EAPlB,yGAUiClB,EAVjC,uCAeA9B,EAAY,CACf,KAAS,SAASkD,EAAWC,GAC5BhD,EAAEC,UAAU,CACXC,QAAS,CACL,eAAgBF,EAAE,2BAA2BG,KAAK,cAKjDP,EAAKqD,WAAWF,EAAUrB,IAAMqB,EAChClD,EAAUqD,YAAY,kBAAmBF,GACzCnD,EAAUqD,YAAY,mBAAoBlD,EAAE0C,EAAIS,eAAevD,KAAK,qBACpEC,EAAUuD,kBAEVtD,EAAeD,UAAUwD,OACzBvD,EAAeD,UAAUqD,YAAY,kBAAmBP,GACxD7C,EAAeD,UAAUqD,YAAY,sBAAuBJ,IAEnE,YAAgB,SAAS3C,EAAMC,GAC9BR,EAAKO,GAAQC,GAEd,YAAgB,SAASD,GACxB,OAAOP,EAAKO,IAEb,WAAe,WACd,OAAOP,GAEL,uBAA2B,SAAS0D,GAChC,OAAOtD,EAAE,sBAAwBsD,EAAc,QAEtD,cAAkB,WACjB,IAAMpB,EAAOlC,EAAE0C,EAAI5B,SAASoB,MAChBoB,EAAcpB,EAAKE,KAAK,gBAAgBhC,MAE9CP,EAAUqD,YAAY,qBAAsBI,GAC5C,IAAIjD,EAAS,CACT,IAAQ,kBAAoBiD,EAAc,mBAC1C,KAAS,CACLpB,KAAMqB,KAAKC,UAAUtB,EAAKuB,iBAAiBC,QAAO,SAASC,EAAEC,GAA0B,OAArBD,EAAEC,EAAEhC,MAAQgC,EAAEC,MAAcF,IAAK,MAEvG,gBAAoB9D,EAAUiE,sBAGlChE,EAAeD,UAAUkE,cAAc1D,IAE3C,qBAAyB,SAASK,GAC9B,GAAGA,EAASsD,MAAO,CACfnE,EAAUoE,yBAAyBvD,EAASI,UAE5ChB,EAAeD,UAAUqE,iBACrBlE,EAAE0C,EAAI5B,SAASoB,MAAM,IAGzB,IAAIiC,EAAkBtE,EAAUuE,uBAAuBvE,EAAUwE,YAAY,uBAC7EvE,EAAeD,UAAUyE,cACrBxE,EAAeD,UAAUwE,YAAY,mBACrCF,EAAgB/B,KAAKM,EAAIK,UAAUjC,UACnCJ,EAASI,SACT,oBAGJ,IAAIyD,EAAc7D,EAASI,SAASG,OAChCuD,EAAWC,SAASzE,EAAE0C,EAAIS,eAAevD,KAAK,qBAElDuE,EAAgB/B,KAAKM,EAAI5B,SAAS4D,cAAcC,KAAKJ,GAClDA,EAAcC,GACbL,EAAgB7B,SAAS,sBAG7BzC,EAAU+E,eAAeT,EAAgB/B,KAAKM,EAAI5B,SAAS+D,UAC3D7E,EAAE0C,EAAIoC,OAAO1D,SAAS2D,MAAM,aAE5BjF,EAAeD,UAAUmF,gBACrBhF,EAAE0C,EAAI5B,SAASmE,WACf,iEAIZ,uBAA2B,SAASC,GAChC,IAAI5B,EAAc4B,EAAYC,QAAQ,cAAcvF,KAAK,eACrDwF,EAAYvF,EAAUwF,iBAAiB/B,GACvCyB,EAAQ/E,EAAE0C,EAAIoC,OAAO/B,UAAUlC,WACnChB,EAAUqD,YAAY,sBAEtB6B,EAAM3C,KAAK,kBAAkBuC,KAAKS,EAAUE,mBAE5CxF,EAAeD,UAAUyE,cACrBxE,EAAeD,UAAUwE,YAAY,mBACrCrE,EAAE0C,EAAIoC,OAAO/B,UAAUjC,SAAUiE,GACjCK,EAAUtE,SACV,qBAGR,yBAA6B,SAASyE,GAClC,IAAIC,EAAe5F,EAAKqD,WAAWwC,WAAU,SAAS1C,GAClD,OAAQA,EAAUrB,KAAO+C,SAAS5E,EAAUwE,YAAY,0BAG5DzE,EAAKqD,WAAWuC,GAAhB,SAA4CD,GAEhD,iBAAqB,SAAS7D,GAC1B,OAAO9B,EAAKqD,WAAWvB,IAE3B,eAAmB,SAASb,GAGJ,IAFDA,EAAUuB,KAAK,UAAUsD,IAAI,WAAWzE,OAGvDJ,EAAUwB,YAAY,aAAaC,SAAS,cAE5CzB,EAAUyB,SAAS,aAAaD,YAAY,eAGpD,gBAAoB,WAChBrC,EAAE,oBAAoBgB,KAAK,IAAI2E,OAAO,uIACtC9F,EAAUqD,YAAY,MAAM,GAG5B,IAAM0C,EAAQC,SAASC,eAAe,oBAClCC,EAAK,IAAIC,aAAaJ,EAAO,CAC7BhG,KAAM6C,iBAAiB5C,UAAUwE,YAAY,mBAC7C4B,aAAc,GACdC,SAAU,EACVC,gBAAgB,EAChBC,aAAc,YAAoB,EAAlBC,MAAkB,IAAXxC,EAAW,EAAXA,MACnBhE,EAAUyG,iBAAiB7B,SAASZ,OAI5ChE,EAAUqD,YAAY,KAAM6C,IAEhC,cAAkB,SAASQ,GACvB,IAAIC,EAAaxG,EAAE0C,EAAIK,UAAUlC,WAAW4F,QAAQC,QAEpD5G,EAAeD,UAAUyE,cACrBxE,EAAeD,UAAUwE,YAAY,uBACrCrE,EAAE0C,EAAIK,UAAUjC,SAAU0F,GAC1BD,EAAMzF,UAGV,IAAI6F,EAAaJ,EAAMzF,SAASG,OAASpB,EAAUwE,YAAY,oBAAsB,qBAAuB,GAE5GmC,EAAWnE,cAAcC,SAAS,aAAeqE,GACjDH,EAAW5G,KAAK,cAAe2G,EAAMxD,UAAUrB,IAC/C1B,EAAE0C,EAAIK,UAAUnB,KAAM4E,GAAY7B,KAAK4B,EAAMxD,UAAUuC,mBACvDtF,EAAE0C,EAAIK,UAAU6D,MAAOJ,GAAY7B,KAAK4B,EAAMzF,SAASG,QAEvDpB,EAAUgH,yBAAyBL,GACnCxG,EAAE0C,EAAIS,eAAenB,QAAQwE,GAE7B3G,EAAU+E,eAAe4B,EAAWpE,KAAKM,EAAI5B,SAAS+D,UAEtD7E,EAAE0C,EAAIoE,OAAOC,OAAO3G,IAAI,KAE5B,iBAAqB,SAASkD,GAC1BtD,EAAEgH,QAAQ,kBAAoB1D,GAAa,SAAU5C,GACjDb,EAAUoH,gBAAgBvG,GAC1Bb,EAAUqH,cAAcxG,OAGhC,gBAAmB,SAAS6F,GACxB3G,EAAKqD,WAAWsD,EAAMxD,UAAUrB,IAAhC,OACO6E,EAAMxD,WADb,IAEI,SAAYwD,EAAMzF,YAG1B,0BAA6B,SAASD,GAClCA,EAAUuB,KAAK,YAAY+E,OAAO,KAClCtG,EAAUuB,KAAK,iBAAiBgF,YAAY,gDAEhD,yBAA4B,SAASvG,GACjCA,EAAUuB,KAAK,YAAYiF,OAC3BxG,EAAUuB,KAAK,iBAAiBC,cAAcC,SAAS,wCAc/D,OAVHtC,EAAE6F,UAAUyB,GAAG,cAAe,kBAAkB,SAASC,GACxDA,EAAEC,iBACF3H,EAAUkE,mBAGR/D,EAAE6F,UAAUyB,GAAG,cAAe,iBAAiB,SAASC,GACpDA,EAAEC,iBACF3H,EAAU4H,0BAA0BzH,EAAE0H,MAAMvC,QAAQ,kBAGjD,CACHvF,KAAOC,EAAU0C,WACjB1C,UAAWA,GA1PO,I","sources":["webpack:///./resources/js/_comments.js","webpack:///./resources/js/households.js"],"sourcesContent":["export const commentsHelper = function () {\n    'use strict';\n\n    let data = {\n        'commentTemplate': null,\n        'commentCardTemplate': null\n    };\n\n    let css = {\n        'mainContainer': '#assignmentContainer',\n        'viewTypes': {\n            'grid': 'ajr-grid',\n            'list': 'ajr-list'\n        },\n        'modals': {\n            'comment': '#commentModal'\n        },\n        'comments': {\n            'form': '#newComment',\n            'formError': '#commentError'\n        },\n        'household': {\n            'container': '.household',\n            'comments': '.allComments',\n            'status': '.status',\n            'error': '.statusError'\n        }\n    };\n\n    let functions = {\n    \t'init' : function(createUrl) {\n    \t\t$.ajaxSetup({\n\t\t\t    headers: {\n\t\t\t        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n\t\t\t    }\n\t\t\t});\n    \t},\n    \t'setDataAttr' : function(attr, val) {\n    \t\tdata[attr] = val;\n    \t},\n    \t'getDataAttr' : function(attr) {\n    \t\treturn data[attr];\n    \t},\n    \t'getAllData' : function() {\n    \t\treturn data;\n    \t},\n        'createComment' : function(params) {\n    \t\t$.ajax({\n                url: params.url,\n                type: 'post',\n                data: params.data,\n                success: function(response) {\n                    params.successCallback(response);\n                }\n            });\n    \t},\n    \t'buildComments' : function(template, container, comments, emptyMessage) {\n    \t\tif(typeof emptyMessage === 'undefined') {\n                emptyMessage = 'No comments yet.';\n            }\n\n            container.html('');\n\n            if(comments.length === 0) {\n                container.html('<p>' + emptyMessage + '</p>');\n            }else {\n    \t\t    $.each(comments, function(index, comment) {\n                    console.log(comment);\n                    console.log(template);\n                    let author = comment.author;\n\n                    if(typeof author === 'undefined') {\n                        author = comment.authorInfo;\n                    }\n                    \n    \t\t\t\t// let authorInfo = author.name + ' - ' + _moment(comment.updated_at).format('YYYY-MM-DD LT');\n    \t\t\t\tlet newComment = template(comment.id, comment.body, author.name, _moment(comment.updated_at).format('YYYY-MM-DD LT'));\n    \t\t\t\tcontainer.prepend(newComment);\n    \t\t\t});\n            }\n    \t},\n    \t'setCommentError' : function(container, error) {\n    \t\tcontainer.html(error);\n    \t},\n    \t'resetCommentForm' : function(form) {\n    \t\tform.reset();\n    \t},\n        'showCommentsAjaxLoader' : function(container) {\n            container.find('.ajax-loader').removeClass('d-none');\n        },\n        'hideCommentsAjaxLoader' : function(container) {\n            container.find('.ajax-loader').addClass('d-none');\n        }\n    };\n\n    return {\n        data : functions.getAllData,\n        functions: functions\n    }\n}();\n","import {commentsHelper} from './_comments.js';\n\nwindow.householdsHelper = function () {\n    'use strict';\n\n    var data = {\n        'households': {},\n        'currentHouseholdId': null,\n        'householdSearch': null,\n        'ac': null,\n        'maxCommentsShown': 4\n    };\n\n    var css = css = {\n        'mainContainer': '#householdsContainer',\n        'modals': {\n            'comment': '#commentModal',\n            'household': {\n                'container': '#householdModal',\n                'comments': '.allComments'\n            }\n        },\n        'comments': {\n            'form': '#newComment',\n            'formError': '#commentError',\n            'commentCount': '.count',\n            'buttons': '.commentBtns'\n        },\n        'household': {\n            'container': '#householdsContainer .household',\n            'comments': '.allComments',\n            'name': '.householdName',\n            'count': '.count',\n            'commentButton': '.commentBtn'\n        },\n        'search': {\n            'input': '#searchHouseholds'\n        }\n    };\n\n    const commentTemplate = function commentTemplate(id, body, authorName, commentDate ) {\n        return `\n            <div class='householdComment' data-commentid=\"${id}\">\n                <author>${authorName} - ${commentDate}</author>\n                <p class=\"commentBody\">${body}</p>\n            </div>\n        `;\n    };\n\n    const commentCardTemplate = function commentCardTemplate(id, body, authorName, commentDate) {\n        return `\n            <div class='householdComment-card' data-commentid=\"${id}\">\n                <author>\n                    <p class=\"authorName\">\n                        ${authorName}\n                    </p>\n                    <p class=\"commentDate\">\n                        ${commentDate}\n                    </p>\n                </author>\n                <p class=\"commentBody\">${body}</p>\n            </div>\n        `;\n    };\n\n    var functions = {\n    \t'init' : function(household, householdSearch) {\n    \t\t$.ajaxSetup({\n\t\t\t    headers: {\n\t\t\t        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n\t\t\t    }\n\t\t\t});\n\n            // functions.setDataAttr('households', household);\n            data.households[household.id] = household;\n            functions.setDataAttr('householdSearch', householdSearch);\n            functions.setDataAttr('maxCommentsShown', $(css.mainContainer).data('maxcommentsshown'));\n            functions.setAutocomplete();\n\n            commentsHelper.functions.init();\n            commentsHelper.functions.setDataAttr('commentTemplate', commentTemplate);\n            commentsHelper.functions.setDataAttr('commentCardTemplate', commentCardTemplate);\n    \t},\n    \t'setDataAttr' : function(attr, val) {\n    \t\tdata[attr] = val;\n    \t},\n    \t'getDataAttr' : function(attr) {\n    \t\treturn data[attr];\n    \t},\n    \t'getAllData' : function() {\n    \t\treturn data;\n    \t},\n        'getActiveContainerById' : function(householdId) {\n            return $('[data-householdid=\"' + householdId + '\"] ');\n        },\n    \t'createComment' : function() {\n    \t\tconst form = $(css.comments.form);\n            const householdId = form.find('#householdId').val();\n            \n            functions.setDataAttr('currentHouseholdId', householdId);\n            let params = {\n                'url' : '/api/household/' + householdId + '/comments/create',\n                'data' : {\n                    form: JSON.stringify(form.serializeArray().reduce(function(m,o){  m[o.name] = o.value; return m;}, {}))\n                },\n                'successCallback' : functions.commentCreateSuccess\n            };\n\n            commentsHelper.functions.createComment(params);\n    \t},\n        'commentCreateSuccess' : function(response) {\n            if(response.saved) {\n                functions.replaceHouseholdComments(response.comments);\n                \n                commentsHelper.functions.resetCommentForm(\n                    $(css.comments.form)[0]\n                );\n\n                let activeContainer = functions.getActiveContainerById(functions.getDataAttr('currentHouseholdId'));\n                commentsHelper.functions.buildComments(\n                    commentsHelper.functions.getDataAttr('commentTemplate'),\n                    activeContainer.find(css.household.comments),\n                    response.comments,\n                    'No comments yet.'\n                );\n\n                let numComments = response.comments.length;\n                let maxShown = parseInt($(css.mainContainer).data('maxcommentsshown'));\n                \n                activeContainer.find(css.comments.commentCount).text(numComments);\n                if(numComments > maxShown) {\n                    activeContainer.addClass('showAllCommentsBtn')\n                }\n\n                functions.handleBtnGroup(activeContainer.find(css.comments.buttons));\n                $(css.modals.comment).modal('hide');\n            } else {\n                commentsHelper.functions.setCommentError(\n                    $(css.comments.formError),\n                    'Could not save your comment. Refresh the page and try again.'\n                );\n            }\n        },\n        'populateHouseholdModal' : function(referrerBtn) {\n            let householdId = referrerBtn.closest('.household').data('householdid');\n            let houseData = functions.getHouseholdById(householdId);\n            let modal = $(css.modals.household.container);\n            functions.setDataAttr('currentHouseholdId');\n            \n            modal.find('.householdName').text(houseData.fullHouseholdName);\n\n            commentsHelper.functions.buildComments(\n                commentsHelper.functions.getDataAttr('commentTemplate'),\n                $(css.modals.household.comments, modal),\n                houseData.comments,\n                'No comments yet.'\n            );\n        },\n        'replaceHouseholdComments' : function(hComments) {\n            let householdKey = data.households.findIndex(function(household) {\n                return (household.id === parseInt(functions.getDataAttr('currentHouseholdId')));\n            });\n\n            data.households[householdKey]['comments'] = hComments;\n        }, \n        'getHouseholdById' : function(id) {\n            return data.households[id];\n        },\n        'handleBtnGroup' : function(container) {\n            let countVisible = container.find('button').not(':hidden').length;\n\n            if(countVisible === 1) {\n                container.removeClass('btn-group').addClass('full-width');\n            } else {\n                container.addClass('btn-group').removeClass('full-width');\n            }\n        },\n        'setAutocomplete' : function() {\n            $(\"#householdSearch\").html('').append('<input type=\"text\" class=\"form-control form-control-lg\" id=\"searchHouseholds\" placeholder=\"Find a household...\" autocomplete=\"off\">');\n            functions.setDataAttr('ac', false);\n\n\n            const field = document.getElementById('searchHouseholds');\n            let ac = new Autocomplete(field, {\n                data: householdsHelper.functions.getDataAttr('householdSearch'),\n                maximumItems: 10,\n                treshold: 1,\n                highlightTyped: false,\n                onSelectItem: ({label, value}) => {\n                    functions.getHouseholdData(parseInt(value));\n                }\n            });\n\n            functions.setDataAttr('ac', ac);\n        },\n        'showHousehold' : function(hData) {\n            let hContainer = $(css.household.container).first().clone();\n            \n            commentsHelper.functions.buildComments(\n                commentsHelper.functions.getDataAttr('commentCardTemplate'),\n                $(css.household.comments, hContainer),\n                hData.comments\n            );\n\n            let countClass = hData.comments.length > functions.getDataAttr('maxCommentsShown') ? 'showAllCommentsBtn' : '';\n\n            hContainer.removeClass().addClass('household ' + countClass);\n            hContainer.data('householdid', hData.household.id);\n            $(css.household.name, hContainer).text(hData.household.fullHouseholdName);\n            $(css.household.count, hContainer).text(hData.comments.length);\n\n            functions.resetHouseholdVisibility(hContainer);\n            $(css.mainContainer).prepend(hContainer);\n\n            functions.handleBtnGroup(hContainer.find(css.comments.buttons));\n\n            $(css.search.input).val('');\n        },\n        'getHouseholdData' : function(householdId) {\n            $.getJSON('/api/household/' + householdId, function( response ) {\n                functions.addToHouseholds(response);\n                functions.showHousehold(response);\n            });\n        },\n        'addToHouseholds': function(hData) {\n            data.households[hData.household.id] = {\n                ...hData.household,\n                'comments': hData.comments\n            }\n        },\n        'toggleHouseholdVisibility': function(container) {\n            container.find('.canHide').toggle(850);\n            container.find('.content-hide').toggleClass('bi-plus-circle-dotted bi-dash-circle-dotted');\n        },\n        'resetHouseholdVisibility': function(container) {\n            container.find('.canHide').show();\n            container.find('.content-hide').removeClass().addClass('content-hide bi-dash-circle-dotted');\n        }\n    };\n\n\t$(document).on('click touch', '#submitComment', function(e) {\n\t\te.preventDefault();\n\t\tfunctions.createComment();\n    });\n\n    $(document).on('click touch', '.content-hide', function(e) {\n        e.preventDefault();\n        functions.toggleHouseholdVisibility($(this).closest('.household'));\n    });\n\n    return {\n        data : functions.getAllData,\n        functions: functions\n    }\n}();\n"],"names":["data","functions","commentsHelper","createUrl","$","ajaxSetup","headers","attr","val","params","ajax","url","type","success","response","successCallback","template","container","comments","emptyMessage","html","length","each","index","comment","console","log","author","authorInfo","newComment","id","body","name","_moment","updated_at","format","prepend","error","form","reset","find","removeClass","addClass","getAllData","window","householdsHelper","css","commentTemplate","authorName","commentDate","commentCardTemplate","household","householdSearch","households","setDataAttr","mainContainer","setAutocomplete","init","householdId","JSON","stringify","serializeArray","reduce","m","o","value","commentCreateSuccess","createComment","saved","replaceHouseholdComments","resetCommentForm","activeContainer","getActiveContainerById","getDataAttr","buildComments","numComments","maxShown","parseInt","commentCount","text","handleBtnGroup","buttons","modals","modal","setCommentError","formError","referrerBtn","closest","houseData","getHouseholdById","fullHouseholdName","hComments","householdKey","findIndex","not","append","field","document","getElementById","ac","Autocomplete","maximumItems","treshold","highlightTyped","onSelectItem","label","getHouseholdData","hData","hContainer","first","clone","countClass","count","resetHouseholdVisibility","search","input","getJSON","addToHouseholds","showHousehold","toggle","toggleClass","show","on","e","preventDefault","toggleHouseholdVisibility","this"],"sourceRoot":""}